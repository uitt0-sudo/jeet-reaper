@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    --background: 0 0% 6%;
    --foreground: 45 100% 98%;

    --card: 0 0% 8%;
    --card-foreground: 45 100% 98%;

    --popover: 0 0% 10%;
    --popover-foreground: 45 100% 98%;

    --primary: 45 100% 51%;
    --primary-foreground: 0 0% 6%;

    --secondary: 0 0% 12%;
    --secondary-foreground: 45 100% 98%;

    --muted: 0 0% 15%;
    --muted-foreground: 0 0% 60%;

    --accent: 270 70% 65%;
    --accent-foreground: 0 0% 98%;

    --success: 140 65% 50%;
    --success-foreground: 0 0% 98%;

    --destructive: 0 85% 60%;
    --destructive-foreground: 0 0% 98%;

    --border: 0 0% 18%;
    --input: 0 0% 18%;
    --ring: 45 100% 51%;

    --radius: 1rem;

    --gradient-primary: linear-gradient(135deg, hsl(45 100% 51%) 0%, hsl(35 100% 55%) 100%);
    --gradient-accent: linear-gradient(135deg, hsl(270 70% 65%) 0%, hsl(140 65% 50%) 100%);
    --gradient-shine: linear-gradient(90deg, transparent 0%, hsla(45 100% 51% / 0.3) 50%, transparent 100%);
    
    --shadow-glow: 0 0 40px hsla(45 100% 51% / 0.15);
    --shadow-card: 0 8px 32px hsla(0 0% 0% / 0.4);
    --shadow-inner: inset 0 1px 2px hsla(0 0% 100% / 0.05);
    
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    font-feature-settings: "cv02", "cv03", "cv04", "cv11";
  }

  /* Glossy card effect */
  .card-glass {
    background: linear-gradient(
      135deg,
      hsla(0 0% 100% / 0.05) 0%,
      hsla(0 0% 100% / 0.02) 100%
    );
    backdrop-filter: blur(12px);
    border: 1px solid hsla(0 0% 100% / 0.08);
  }

  /* Noise texture */
  .noise-texture::before {
    content: "";
    position: absolute;
    inset: 0;
    opacity: 0.03;
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 400 400' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='2' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    pointer-events: none;
    border-radius: inherit;
  }

  /* Gradient text */
  .gradient-text {
    background: var(--gradient-primary);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  /* Shine animation */
  @keyframes shine-sweep {
    0% {
      transform: translateX(-100%);
    }
    100% {
      transform: translateX(200%);
    }
  }

  .shine-effect {
    position: relative;
    overflow: hidden;
  }

  .shine-effect::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--gradient-shine);
    animation: shine-sweep 3s ease-in-out infinite;
  }

  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }

  ::-webkit-scrollbar-track {
    background: hsl(var(--background));
  }

  ::-webkit-scrollbar-thumb {
    background: hsl(var(--muted));
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: hsl(var(--primary) / 0.5);
  }

  /* Hazard stripe pattern */
  .hazard-stripe {
    background: repeating-linear-gradient(
      45deg,
      hsl(0 0% 6%),
      hsl(0 0% 6%) 20px,
      hsl(45 100% 51%) 20px,
      hsl(45 100% 51%) 40px
    );
  }

  /* Smooth marquee */
  @keyframes marquee {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-50%);
    }
  }

  .animate-marquee {
    animation: marquee 20s linear infinite;
  }

  .animate-marquee:hover {
    animation-play-state: paused;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }
}
